name: Start Environment Apply

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: choice
        options:
          - dev
          - test
          - demo
          - prod

jobs:
  process-environment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js for running JavaScript files
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Install Node.js dependencies if package.json exists
      - name: Install Node.js dependencies
        run: |
          if [ -f package.json ]; then
            npm ci
          else
            echo "No package.json found, skipping npm install"
          fi

      # Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.0

      # Install MongoDB tools for mongodump
      - name: Install MongoDB tools
        run: |
          # Add MongoDB repository
          wget -qO - https://www.mongodb.org/static/pgp/server-7.0.asc | sudo apt-key add -
          echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/7.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-7.0.list
          
          # Update package list and install MongoDB tools
          sudo apt-get update
          sudo apt-get install -y mongodb-database-tools
          
          # Verify installation
          mongodump --version

      - name: Set environment secrets
        run: |
          # Select the appropriate secret based on environment
          case "${{ github.event.inputs.environment }}" in
            "dev")
              ENV_SECRETS='${{ secrets.DEV_SECRETS }}'
              ;;
            "test")
              ENV_SECRETS='${{ secrets.TEST_SECRETS }}'
              ;;
            "demo")
              ENV_SECRETS='${{ secrets.DEMO_SECRETS }}'
              ;;
            "prod")
              ENV_SECRETS='${{ secrets.PROD_SECRETS }}'
              ;;
            *)
              echo "Error: Invalid environment specified"
              exit 1
              ;;
          esac
          
          # Validate that ENV_SECRETS is not empty
          if [ -z "$ENV_SECRETS" ] || [ "$ENV_SECRETS" = "null" ]; then
            echo "Error: No secrets found for environment ${{ github.event.inputs.environment }}"
            exit 1
          fi
          
          # Set environment variables for the next step
          echo "ENVIRONMENT=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
          echo "ENV_SECRETS_JSON=$ENV_SECRETS" >> $GITHUB_ENV

      - name: Run bash script
        run: |
          echo "Environment: $ENVIRONMENT"
          echo "Running script with secrets for environment: $ENVIRONMENT"
          
          # Make script executable and run it with the complete JSON and environment
          chmod +x ./scripts/apply.sh
          ./scripts/apply.sh "$ENV_SECRETS_JSON" "$ENVIRONMENT"