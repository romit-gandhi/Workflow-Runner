name: Start Environment Plan

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: choice
        options:
          - dev
          - test
          - demo
          - prod

jobs:
  process-environment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.0

      - name: Set environment secrets and parse JSON
        run: |
          # Select the appropriate secret based on environment
          case "${{ github.event.inputs.environment }}" in
            "dev")
              ENV_SECRETS='${{ secrets.DEV_SECRETS }}'
              ;;
            "test")
              ENV_SECRETS='${{ secrets.TEST_SECRETS }}'
              ;;
            "demo")
              ENV_SECRETS='${{ secrets.DEMO_SECRETS }}'
              ;;
            "prod")
              ENV_SECRETS='${{ secrets.PROD_SECRETS }}'
              ;;
            *)
              echo "Error: Invalid environment specified"
              exit 1
              ;;
          esac
          
          # Validate that ENV_SECRETS is not empty
          if [ -z "$ENV_SECRETS" ] || [ "$ENV_SECRETS" = "null" ]; then
            echo "Error: No secrets found for environment ${{ github.event.inputs.environment }}"
            exit 1
          fi
          
          # Parse JSON and extract individual values with error handling
          AUTH0_DOMAIN=$(echo "$ENV_SECRETS" | jq -r '.auth0_domain // empty')
          CLIENT_ID=$(echo "$ENV_SECRETS" | jq -r '.client_id // empty')
          CLIENT_SECRET=$(echo "$ENV_SECRETS" | jq -r '.client_secret // empty')
          
          # Validate that all required fields are present
          if [ -z "$AUTH0_DOMAIN" ] || [ -z "$CLIENT_ID" ] || [ -z "$CLIENT_SECRET" ]; then
            echo "Error: Missing required fields in secrets JSON"
            echo "AUTH0_DOMAIN: $([ -n "$AUTH0_DOMAIN" ] && echo "✓" || echo "✗")"
            echo "CLIENT_ID: $([ -n "$CLIENT_ID" ] && echo "✓" || echo "✗")"
            echo "CLIENT_SECRET: $([ -n "$CLIENT_SECRET" ] && echo "✓" || echo "✗")"
            exit 1
          fi
          
          # Set as environment variables for the next step
          echo "AUTH0_DOMAIN=$AUTH0_DOMAIN" >> $GITHUB_ENV
          echo "CLIENT_ID=$CLIENT_ID" >> $GITHUB_ENV
          echo "CLIENT_SECRET=$CLIENT_SECRET" >> $GITHUB_ENV
          echo "ENVIRONMENT=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
          
          # Also set the complete JSON for the script if needed
          echo "ENV_SECRETS_JSON=$ENV_SECRETS" >> $GITHUB_ENV

      - name: Run bash script
        run: |
          echo "Environment: $ENVIRONMENT"
          echo "AUTH0_DOMAIN: $AUTH0_DOMAIN"
          echo "CLIENT_ID: $CLIENT_ID"
          echo "CLIENT_SECRET: [HIDDEN]"
          
          # Make script executable and run it
          # chmod +x ./scripts/script.sh
          # ./scripts/script.sh "$AUTH0_DOMAIN" "$CLIENT_ID" "$CLIENT_SECRET" "$ENVIRONMENT"